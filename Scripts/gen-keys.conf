#include ../../wrapper/conf/common.conf
# -----------------------------------------------------------------
# Place this file in C:\xstore\wrapper\conf\
# -----------------------------------------------------------------
# Make no changes to this file other than these:
#
# Select 1 of the following 3 options and follow the instructions in those sections:
# Section 1: Generate Initial Cipher Keys
# Section 2: Generate Rotating Cipher Keys (All Keys)
# Section 3: Generate Rotating Cipher Keys (Credit Card Keys Only)
#
# Required: follow the instructions shown under:
# Section 4: Define Customer ID
# -----------------------------------------------------------------
# -----------------------------------------------------------------
# Section 1: Generate Initial Cipher Keys (All Keys)
# Notes: These keys will have no effective date.
#        Encryption will still occur, but a warning will be displayed during each transaction
#
# Uncomment line below and comment out Sections 2 & 3
# 
#wrapper.app.parameter.2=-all
# -----------------------------------------------------------------
# Section 2: Generate Rotating Cipher Keys (All Keys)
# Uncomment lines below and comment out Sections 1 & 3
# Update parameter.3 (start date) and parameter.4 (end date) with the desired effective dates (YYYY-MM-DD)
#
wrapper.app.parameter.2=-all
wrapper.app.parameter.3=2016-06-15
wrapper.app.parameter.4=2017-12-31
# -----------------------------------------------------------------
# Section 3: Generate Rotating Cipher Keys (Credit Card Keys Only)
# Uncomment lines below and comment out Sections 1 & 2
# Update parameter.4 (start date) and parameter.5 (end date) with the desired effective dates (YYYY-MM-DD)
#
#wrapper.app.parameter.2=-make
#wrapper.app.parameter.3=ccenc
#wrapper.app.parameter.4=2007-01-01
#wrapper.app.parameter.5=2007-12-31
# -----------------------------------------------------------------
# Section 4: Define Customer ID
# Update line below (i.e. CustomerID=XYZ) to this customer's ID as defined in C:\xstore\system.properties: dtv.CustomerId=XYZ
# Note: The "dtv.CustomerId" value is case-sensitive.
#
wrapper.java.additional.4=-Ddtv.CustomerId=TJX
# -----------------------------------------------------------------
# Section 5: Define information used for secondary export during generation
wrapper.java.additional.5=-Ddtv.keygen.export.keystore=res/keys/.keystore
wrapper.java.additional.6=-Ddtv.keygen.export.key.alias=export
wrapper.java.additional.7=-Ddtv.keygen.export.keystore.password=publicpassword

# -----------------------------------------------------------------
# CIPHER HEALTH DOCUMENTATION
# -----------------------------------------------------------------
# The cipher health indicates why the preflight failed. The possible cipher healths are listed below:
#
# GOOD: At least one good cipher is available. All is well.
#   Resolution: Nothing to do. Should not show up as a failure.
# EXPIRED: Only expired ciphers are available. Encryption will still occur, but a warning will be
#     displayed during each transaction.
#   Resolution: Generate a cipher with both an effective date and an expiration date.
# NOT_YET_EFFECTIVE: The best cipher option is not yet effective. Encryption will still occur, but a 
#     warning will be displayed during each transaction.
#   Resolution: Generate a cipher with both an effective date and an expiration date that are current.
# FAILOVER: The fail-over cipher is being used. Encryption will still occur, but a warning will be
#     displayed during each transaction.
#   Resolution: Verify that valid cipher files are in place for "ccenc" and that the "dtv.CustomerId" system
#     property matches the value used to generate the key. (The "dtv.CustomerId" value is case-sensitive.)
#     The cipher files are usually in: C:\xstore\res\keys\
# DEFAULT_KEY: A cipher with no effective date is being used. Encryption will still occur, but a
#     warning will be displayed during each transaction.
#   Resolution: Generate a cipher with both an effective date and an expiration date.
# NO_EXPIRATION: The most current cipher has no expiration date. Encryption will still occur,
#     but a warning will be displayed during each transaction.
#   Resolution: Generate a cipher with both an effective date and an expiration date.
# NONE: No encryption can take place. Xstore should not be able to fully start.
#   Resolution: Make sure that Unlimited Cryptography support is available in the JVM. (See Xstore developer setup.)
# -----------------------------------------------------------------
# NO CHANGES BELOW THIS LINE
# -----------------------------------------------------------------
# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp
# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=dtv.util.crypto.SecretKeyCipherManager
#
# -----------------------------------------------------------------
# Wrapper Windows Properties
# -----------------------------------------------------------------
# Title to use when running as a console
wrapper.console.title=Cipher Key Generation
wrapper.java.additional.3=-Ddtv.util.crypto.SecretKeyCipherManager.keyStoreDirectory=res/keys/